// === –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï ===
let reputation = 0;
let repPerClick = 1;
let passiveIncome = 0;
let adhdLevel = 100;       // –æ—Ç 0 –¥–æ 100
let adhdMax = 100;

let stage = 'work';        // 'work' –ª–∏–±–æ 'pause'
let workTimer = 60;        // —Å–µ–∫
let pauseTimer = 60;       // —Å–µ–∫
let shiftCount = 0;
let repGoal = 100;

let eventTimeout = null;
let eventActive = false;
let spinnerActive = false;
let spinnerProgress = 0;
let spinnerInterval = null;
let adhdDrainRate = 1;     // –µ–¥–∏–Ω–∏—Ü –∑–∞ —Å–µ–∫

// === –≠–õ–ï–ú–ï–ù–¢–´ DOM ===
const menuButton    = document.getElementById('menu-button');
const menuPanel     = document.getElementById('menu');
const reputationEl  = document.getElementById('reputation');
const characterImg  = document.getElementById('characterImg');
const shiftTimerEl  = document.getElementById('shiftTimer');
const adhdBar       = document.getElementById('adhd-bar');
const clickButton   = document.getElementById('click-button');
const upgradesEl    = document.getElementById('upgrades');
const eventEl       = document.getElementById('event');
const acceptBtn     = document.getElementById('acceptBtn');
const declineBtn    = document.getElementById('declineBtn');
const tiktokEl      = document.getElementById('tiktok');
const energyDrinkEl = document.getElementById('energy-drink');
const restartBtn    = document.getElementById('restartBtn');
const openTiktokBtn = document.getElementById('openTiktokBtn');
const musicVolume   = document.getElementById('musicVolume');
const sfxVolume     = document.getElementById('sfxVolume');
const spinnerCont   = document.getElementById('spinner-container');
const spinnerProg   = document.getElementById('spinner-progress');

// === –ê–£–î–ò–û ===
const audioClick    = new Audio('assets/audio/click.mp3');
const audioKeyboard = new Audio('assets/audio/keyboard.mp3');
const audioMusic    = new Audio('assets/audio/music.mp3');
const audioCall     = new Audio('assets/audio/call.mp3');
const audioEnergy   = new Audio('assets/audio/energy.mp3');
const audioBoss     = new Audio('assets/audio/boss.mp3');
const audioTiktok   = new Audio('assets/audio/tiktok.mp3');

audioMusic.loop = true;
audioMusic.volume = musicVolume.value;
audioMusic.play();

// === –ü–†–û–ö–ê–ß–ö–ò ===
let upgrades = [
  { name: "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫", cost: 50, effect: () => activateEnergy(), owned: false },
  { name: "–ì–∞—Ä–Ω–∏—Ç—É—Ä–∞", cost: 200, effect: () => passiveIncome += 1, owned: false },
  { name: "–≠–∫—Å–µ–ª—å-–ú–∞—Å—Ç–µ—Ä", cost: 500, effect: () => repPerClick += 1, owned: false },
  { name: "–¢–∏–º–±–∏–ª–¥–∏–Ω–≥", cost: 1000, effect: () => repPerClick *= 2, owned: false }
];

// === –ò–í–ï–ù–¢–´ ===
const events = [
  { name: "üîß –õ–æ–º–∞–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞!",   effect: () => repPerClick = Math.max(1, Math.floor(repPerClick / 2)),   duration: 15 },
  { name: "üìû –ó–≤–æ–Ω–∏—Ç –∫–ª–∏–µ–Ω—Ç!",           effect: () => repPerClick = 0,                                           duration: 10 },
  { name: "üêå –õ–∞–≥–∏ —Å–∏—Å—Ç–µ–º—ã!",            effect: () => passiveIncome = 0,                                        duration: 20 }
];

// === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===
function initGame() {
  reputation = 0;
  repPerClick = 1;
  passiveIncome = 0;
  adhdLevel = adhdMax;
  stage = 'work';
  workTimer = 60;
  pauseTimer = 60;
  shiftCount = 0;
  repGoal = 100;
  eventActive = false;
  spinnerActive = false;
  spinnerProgress = 0;
  clearInterval(spinnerInterval);
  audioMusic.currentTime = 0;
  audioMusic.play();
  generateUpgrades();
  updateDisplayAll();
  scheduleEventCheck();
}

// === –û–ë–ù–û–í–õ–ï–ù–ò–ï –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø ===
function updateDisplayAll() {
  reputationEl.innerText = `–†–ï–ü–£–¢–ê–¶–ò–Ø: ${reputation}`;
  shiftTimerEl.innerText = formatTime(stage === 'work' ? workTimer : pauseTimer);
  adhdBar.style.width = `${adhdLevel}%`;
}
function formatTime(sec) {
  let m = Math.floor(sec / 60);
  let s = sec % 60;
  return `${String(m).padStart(2,'0')}:${String(s).padStart(2,'0')}`;
}

// === –ì–ï–ù–ï–†–ê–¶–ò–Ø –°–ü–ò–°–ö–ê –ü–†–û–ö–ê–ß–ï–ö ===
function generateUpgrades() {
  upgradesEl.innerHTML = '';
  upgrades.forEach((upg, idx) => {
    if (!upg.owned) {
      const btn = document.createElement('button');
      btn.innerText = `${upg.name} ‚Äî ${upg.cost}`;
      btn.onclick = () => buyUpgrade(idx);
      if (reputation < upg.cost) btn.disabled = true;
      upgradesEl.appendChild(btn);
    }
  });
}

function buyUpgrade(idx) {
  let upg = upgrades[idx];
  if (reputation >= upg.cost && !upg.owned) {
    reputation -= upg.cost;
    upg.effect();
    upg.owned = true;
    if (upg.name === "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫") {
      energyDrinkEl.classList.remove('disabled');
    }
    generateUpgrades();
    updateDisplayAll();
    playSfx(audioClick);
  }
}

// === –ö–ù–û–ü–ö–ê ¬´–ö–õ–ê–¶¬ª ===
clickButton.addEventListener('click', () => {
  if (stage !== 'work' || eventActive || spinnerActive) return;
  if (adhdLevel <= 0) return;
  reputation += repPerClick;
  playSfx(audioKeyboard);
  clickButton.classList.add('pressed');
  setTimeout(() => clickButton.classList.remove('pressed'), 100);
  updateDisplayAll();
});

// === –û–ë–©–ò–ô –¶–ò–ö–õ –ò–ì–†–´ (–∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É) ===
setInterval(() => {
  if (stage === 'work' && !eventActive && !spinnerActive) {
    // —É–º–µ–Ω—å—à–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ —Ä–∞–±–æ—á–µ–π —Å–º–µ–Ω—ã
    workTimer--;
    // –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥
    reputation += passiveIncome;
    // —É–º–µ–Ω—å—à–µ–Ω–∏–µ —à–∫–∞–ª—ã –°–î–í–ì
    adhdLevel = Math.max(0, adhdLevel - adhdDrainRate);
    // –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ü–∞ —Å–º–µ–Ω—ã
    if (workTimer <= 0) {
      if (reputation >= repGoal) {
        // –£–°–ü–ï–•: –ø–µ—Ä–µ—Ä—ã–≤
        enterPause(true);
      } else {
        // –ü–†–û–í–ê–õ: –±–æ—Å—Å —Ä–∞–∑–æ–∑–ª–∏–ª—Å—è
        playSfx(audioBoss);
        enterPause(false);
      }
    }
    updateDisplayAll();
  } else if (stage === 'pause') {
    pauseTimer--;
    if (pauseTimer <= 0) {
      // –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é —Å–º–µ–Ω—É
      enterWork();
    }
    updateDisplayAll();
  }
}, 1000);

// === –ó–ê–ü–£–°–ö –†–ê–ë–û–ß–ï–ô –°–ú–ï–ù–´ ===
function enterWork() {
  stage = 'work';
  workTimer = Math.max(30, 60 - 5 * shiftCount); // –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: –∫–∞–∂–¥–∞—è —Å–º–µ–Ω–∞ –∫–æ—Ä–æ—á–µ
  pauseTimer = 60;
  shiftCount++;
  repGoal = Math.floor(repGoal * 1.3 + 20 * shiftCount);
  eventActive = false;
  spinnerActive = false;
  adhdDrainRate = 1 + Math.floor(shiftCount / 2); // —à–∫–∞–ª–∞ —É–±—ã–≤–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ
  generateUpgrades();
  updateDisplayAll();
  scheduleEventCheck();
}

// === –ó–ê–ü–£–°–ö –ü–ï–†–ï–†–´–í–ê ===
function enterPause(success) {
  stage = 'pause';
  pauseTimer = 60; // 1 –º–∏–Ω—É—Ç–∞ –ø–µ—Ä–µ—Ä—ã–≤–∞
  workTimer = 0;
  eventActive = false;
  spinnerActive = false;
  generateUpgrades();
  updateDisplayAll();
  if (success) {
    // –ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π —Å–º–µ–Ω–µ —à–∞–Ω—Å –∏–≤–µ–Ω—Ç–∞
    if (shiftCount % 2 === 0) triggerRandomEvent();
    if (shiftCount % 3 === 0) setTimeout(startSpinnerGame, 1000);
  } else {
    // –ü—Ä–∏ –ø—Ä–æ–≤–∞–ª–µ –¥–∞—ë–º –º–∏–Ω—É—Å –≤ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
    reputation = Math.max(0, reputation - Math.floor(repGoal / 2));
    updateDisplayAll();
  }
}

// === –°–õ–£–ß–ê–ô–ù–´–ô –ò–í–ï–ù–¢ ===
function triggerRandomEvent() {
  if (eventActive || spinnerActive) return;
  eventActive = true;
  let ev = events[Math.floor(Math.random() * events.length)];
  eventEl.querySelector('p').innerText = ev.name;
  eventEl.classList.remove('hidden');
  playSfx(audioCall);
  // –§—É–Ω–∫—Ü–∏—è –∫–ª–∏–∫–∞ ¬´–û—Ç–∫–ª–æ–Ω–∏—Ç—å¬ª
  declineBtn.onclick = () => {
    eventEl.classList.add('hidden');
    eventActive = false;
    clearTimeout(eventTimeout);
  };
  // –§—É–Ω–∫—Ü–∏—è –∫–ª–∏–∫–∞ ¬´–ü—Ä–∏–Ω—è—Ç—å¬ª
  acceptBtn.onclick = () => {
    eventEl.classList.add('hidden');
    ev.effect();
    setTimeout(() => {
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ—Å–ª–µ –∏–≤–µ–Ω—Ç–∞
      repPerClick = Math.max(1, repPerClick);
      passiveIncome = Math.floor(shiftCount / 2);
      eventActive = false;
      updateDisplayAll();
    }, ev.duration * 1000);
  };
  // –ï—Å–ª–∏ –Ω–µ –Ω–∞–∂–∞–ª–∏ –∑–∞ 10 —Å–µ–∫, —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–ø–∞–¥–∞–µ—Ç
  eventTimeout = setTimeout(() => {
    eventEl.classList.add('hidden');
    eventActive = false;
  }, 10000);
}

// === –ú–ò–ù–ò-–ò–ì–†–ê: –†–ê–°–ö–†–£–¢–ò –ö–û–õ–ï–°–û ===
function startSpinnerGame() {
  if (spinnerActive || eventActive) return;
  spinnerActive = true;
  spinnerProgress = 0;
  spinnerProg.style.width = '0%';
  spinnerCont.style.display = 'block';
  // –ü–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ ¬´–ö–õ–ê–¶¬ª –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
  clickButton.addEventListener('click', spinnerClick);
  // –ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –∑–∞–º–µ–¥–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
  spinnerInterval = setInterval(() => {
    spinnerProgress = Math.max(0, spinnerProgress - 2);
    spinnerProg.style.width = spinnerProgress + '%';
    if (!spinnerActive) clearInterval(spinnerInterval);
  }, 500);

  // –ï—Å–ª–∏ –Ω–µ —É—Å–ø–µ–ª–∏ –∑–∞ 10 —Å–µ–∫, –º–∏–Ω–∏‚Äë–∏–≥—Ä–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è
  setTimeout(endSpinnerGame, 10000);
}
function spinnerClick() {
  if (!spinnerActive) return;
  spinnerProgress = Math.min(100, spinnerProgress + 10);
  spinnerProg.style.width = spinnerProgress + '%';
  if (spinnerProgress >= 100) {
    // –í—ã–∏–≥—Ä—ã—à: –¥–∞—ë–º –±–æ–ª—å—à–æ–π –±–æ–Ω—É—Å —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
    reputation += 200;
    updateDisplayAll();
    endSpinnerGame();
  }
}
function endSpinnerGame() {
  spinnerActive = false;
  spinnerCont.style.display = 'none';
  clickButton.removeEventListener('click', spinnerClick);
  clearInterval(spinnerInterval);
}

// === –®–ï–î–£–õ–ï–† –î–õ–Ø –ò–í–ï–ù–¢–û–í (–°–õ–£–ß–ê–ô–ù–´–• –ó–í–û–ù–û–ö) ===
function scheduleEventCheck() {
  if (stage !== 'work') return;
  let t = Math.random() * (workTimer - 5) * 1000; // –º–µ–∂–¥—É 0 –∏ workTimer-5 —Å–µ–∫
  setTimeout(() => {
    if (stage === 'work' && !eventActive && !spinnerActive) triggerRandomEvent();
  }, t);
}

// === –≠–ù–ï–†–ì–ï–¢–ò–ö ===
function activateEnergy() {
  if (adhdLevel >= adhdMax) return;
  playSfx(audioEnergy);
  adhdBar.style.background = 'linear-gradient(to right, red, orange, yellow, green, blue, indigo, violet)';
  adhdLevel = adhdMax;
  updateDisplayAll();
  setTimeout(() => {
    adhdBar.style.background = 'white';
  }, 10000);
}
energyDrinkEl.onclick = () => {
  let upg = upgrades.find(u => u.name === "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫");
  if (upg && upg.owned) {
    activateEnergy();
  }
};

// === –û–¢–ö–†–´–¢–ò–ï/–ó–ê–ö–†–´–¢–ò–ï TIKTOK ===
openTiktokBtn.onclick = () => {
  tiktokEl.classList.remove('hidden');
  playSfx(audioTiktok);
};
tiktokEl.onclick = () => {
  tiktokEl.classList.add('hidden');
  adhdLevel = Math.min(adhdMax, adhdLevel + 30);
  updateDisplayAll();
};

// === –†–ï–°–¢–ê–†–¢ –ò–ì–†–´ ===
restartBtn.onclick = () => {
  initGame();
};

// === –†–ï–ì–£–õ–Ø–¶–ò–Ø –ì–†–û–ú–ö–û–°–¢–ò ===
musicVolume.oninput = () => {
  audioMusic.volume = musicVolume.value;
};
sfxVolume.oninput = () => {
  [audioClick, audioKeyboard, audioCall, audioEnergy, audioBoss, audioTiktok].forEach(a => a.volume = sfxVolume.value);
};

// === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ó–í–£–ö–û–í ===
function playSfx(audio) {
  audio.currentTime = 0;
  audio.play();
}

// === –°–í–ê–ô–ü –í–í–ï–†–•: –û–¢–ö–†–´–¢–¨ TIKTOK ===
let touchStartY = null;
document.body.addEventListener('touchstart', e => {
  touchStartY = e.changedTouches[0].clientY;
});
document.body.addEventListener('touchend', e => {
  let dy = touchStartY - e.changedTouches[0].clientY;
  if (dy > 50) {
    tiktokEl.classList.remove('hidden');
    playSfx(audioTiktok);
  }
});

// === –°–¢–ê–†–¢ –ò–ì–†–´ ===
window.onload = () => {
  tiktokEl.classList.add('hidden');
  initGame();
};
